#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi 4 Offical OpenWrt

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/openwrt/openwrt
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: |
       cd openwrt
       echo "src-git lienol https://github.com/Lienol/openwrt-package" >> feeds.conf.default
       ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      env:
        CONFIG_FILE: 'rpi4-offical-openwrt.config'
        DIY_SH: 'offical-openwrt.sh'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

#    - name: SSH connection to Actions
#      uses: P3TERX/debugger-action@master

    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Multi-thread compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        
    - name: Single-thread compile
      if: failure()
      run: |
        cd openwrt
        make -j1 V=s
        
    - name: Compress Packages
      run: |
        cd openwrt/bin/
        zip -r packages.zip packages
        cd targets/brcm2708/bcm2711/
        zip -r kernel-packages.zip packages
        
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Config
      id: upload-config
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/config.buildinfo
        asset_name: rpi4-offical-config.buildinfo
        asset_content_type: text/plain

    - name: Upload Packages Info
      id: upload-package-info
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4.manifest
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711.manifest
        asset_content_type: text/plain

    - name: Upload Sha256sums
      id: upload-sha256sums
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/sha256sums
        asset_name: rpi4-offical-sha256sums
        asset_content_type: text/plain

    - name: Upload Squashfs Factory Image
      id: upload-squashfs-factory-image
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4-squashfs-factory.img.gz
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711-squashfs-factory.img.gz
        asset_content_type: application/gzip

    - name: Upload Squashfs Sysupgrade Image
      id: upload-squashfs-sysupgrade-image
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4-squashfs-sysupgrade.img.gz
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711-squashfs-sysupgrade.img.gz
        asset_content_type: application/gzip

    - name: Upload Ext4 Factory Image
      id: upload-ext4-factory-image
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4-ext4-factory.img.gz
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711-ext4-factory.img.gz
        asset_content_type: application/gzip

    - name: Upload Ext4 Sysupgrade Image
      id: upload-ext4-sysupgrade-image
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4-ext4-sysupgrade.img.gz
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711-ext4-sysupgrade.img.gz
        asset_content_type: application/gzip

    - name: Upload Rootfs Archive
      id: upload-rootfs-archive
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/openwrt-brcm2708-bcm2711-rpi-4-rootfs.tar.gz
        asset_name: rpi4-offical-openwrt-brcm2708-bcm2711-rootfs.tar.gz
        asset_content_type: application/gzip

    - name: Upload Packages
      id: upload-packages
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/packages.zip
        asset_name: rpi4-offical-packages.zip
        asset_content_type: application/zip

    - name: Upload Kernel Packages
      id: upload-kernel-packages
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: openwrt/bin/targets/brcm2708/bcm2711/packages.zip
        asset_name: rpi4-offical-kernel-packages.zip
        asset_content_type: application/zip
